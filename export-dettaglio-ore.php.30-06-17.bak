<?php
/*echo ini_get('display_errors');

if (!ini_get('display_errors')) {
    ini_set('display_errors', '1');
}

echo ini_get('display_errors');
*/
    require_once ('class/dbconn.php');
    require_once ('assets/php/PHPExcel.php');
    require_once ('assets/php/functions.php');
    
    session_start();
    date_default_timezone_set('Europe/Rome');
    
    $database = new Database();
    $db = $database->dbConnection();
    
    $idUser = $_GET['id'];
    $idMonth = $_GET['mese'];
    $idYear = $_GET['anno'];
    $numberOfDays = cal_days_in_month(CAL_GREGORIAN, $idMonth, $idYear);
    $title = 'Dettaglio' . $idUser . 'Ore' . $idMonth . $idYear;
    
    $stmt = $db->prepare("SELECT nome, cognome FROM anagrafica WHERE user_id = ? LIMIT 1");
    $stmt->bind_param('i', $idUser);
    $stmt->execute();
    $stmt->store_result();
    $stmt->bind_result($userName, $userSurname);
    $stmt->fetch();

    $objPHPExcel = new PHPExcel();
  
    // Seleziono le commesse a cui ha lavorato l'utente il mese in questione
    $commesseUser = array();
    $commesseNomiUser = array();
    $stmt = $db->prepare("SELECT DISTINCT timecard FROM attivita WHERE id_utente = ?");
    $stmt->bind_param('i', $idUser);
    $stmt->execute();
    $stmt->store_result();
    $stmt->bind_result($currentTimecard);
    while($stmt->fetch()) {
        if($currentTimecard != '') {
            $currentTimecard = explode(",", $currentTimecard);
            for($i=0; $i<count($currentTimecard); $i++) {
                $idTimecard = explode("-", $currentTimecard[$i]);
                if(!in_array($idTimecard[0], $commesseUser, true)){
                    $stmtClient = $db->prepare("SELECT cliente FROM commesse WHERE id_commessa = ?");
                    $stmtClient->bind_param('i', $idTimecard[0]);
                    $stmtClient->execute();
                    $stmtClient->store_result();
                    $stmtClient->bind_result($currentNameJob);
                    $stmtClient->fetch();
                    
                    if(!in_array($currentNameJob, $commesseNomiUser, true)) {
                        array_push($commesseUser, $idTimecard[0]);
                        array_push($commesseNomiUser, $currentNameJob);
                    }
                    
                }
            }
        }
    }
    
    for($i=0; $i<count($commesseUser); $i++) {
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue('B' . ($i+15), $commesseNomiUser[$i]);
    }
 
    $objPHPExcel->getProperties()
            ->setTitle($title)
            ->setSubject($title)
            ->setDescription($title);
    /*
    $objPHPExcel->getDefaultStyle()
        ->getAlignment()
        ->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    */
    // Settaggio celle con testo in grassetto
    $objPHPExcel->getActiveSheet()
            ->getStyle("F4:AH4")
            ->getFont()->setBold(true);
    
    $objPHPExcel->getActiveSheet()
            ->getStyle("F5:AK5")
            ->getFont()->setBold(true);
    
    $objPHPExcel->getActiveSheet()
            ->getStyle("B6:AL6")
            ->getFont()->setBold(true);
    
    $objPHPExcel->getActiveSheet()
            ->getStyle("B14:AL14")
            ->getFont()->setBold(true);
    
    // Settaggio valori celle statici
    $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue('F4', 'TS Excel di')
            ->setCellValue('H4', strtoupper($userSurname . ' ' . $userName))
            ->setCellValue('H5', 'Cognome')
            ->setCellValue('J5', 'Nome')
            ->setCellValue('S4', 'Roma')
            ->setCellValue('S5', 'Gruppo/Ufficio')
            ->setCellValue('Z4', 'SENIOR')
            ->setCellValue('Z5', 'Qualifica')
            ->setCellValue('AH2', date('m-m-Y H:i'))
            ->setCellValue('B6', 'Cod. Collaboratore')
            ->setCellValue('G6', 'TEMPI')
            ->setCellValue('B7', 'Mese')
            ->setCellValue('C7', $idMonth)
            ->setCellValue('D7', 'Anno')
            ->setCellValue('E7', substr($idYear, 2))
            ->setCellValue('F7', 'Permessi da trattenere, congedo matrimoniale')
            ->setCellValue('F8', 'Ferie')
            ->setCellValue('F9', 'MaternitÃ , infort., cong. parent., visite med.')
            ->setCellValue('F10', 'Malattia')
            ->setCellValue('F11', 'Permessi retrib. (fest. abolite / ROL)')
            ->setCellValue('F12', 'Totale ore non lavorate')
            ->setCellValue('F13', 'Ore straordinarie')
            ->setCellValue('B14', 'CLIENTE');
    
    
    for($i=0; $i<$numberOfDays; $i++) {
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue(PHPExcel_Cell::stringFromColumnIndex($i+7) . '6', strval($i+1))
            ->setCellValue(PHPExcel_Cell::stringFromColumnIndex($i+7) . '14', strval($i+1));
        
        $currentDate = getTimestamp($i+1, $idMonth, $idYear);
        if(getPosDayFromDate($currentDate) == 6 || getPosDayFromDate($currentDate) == 7) {
            $objPHPExcel->getActiveSheet()
                ->getStyle(PHPExcel_Cell::stringFromColumnIndex($i+7) . '7:' . 
                        PHPExcel_Cell::stringFromColumnIndex($i+7) . '11')
                ->getFill()
                ->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
        
            $objPHPExcel->getActiveSheet()
                ->getStyle(PHPExcel_Cell::stringFromColumnIndex($i+7) . '7:' . 
                        PHPExcel_Cell::stringFromColumnIndex($i+7) . '11')
                ->getFill()
                ->getStartColor()
                ->setRGB('2f3caa');
         
            if(count($commesseUser) > 0) {
                
                $objPHPExcel->getActiveSheet()
                    ->getStyle(PHPExcel_Cell::stringFromColumnIndex($i+7) . '15:' . 
                            PHPExcel_Cell::stringFromColumnIndex($i+7) . (14 + count($commesseUser)))
                    ->getFill()
                    ->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
                
                $objPHPExcel->getActiveSheet()
                    ->getStyle(PHPExcel_Cell::stringFromColumnIndex($i+7) . '15:' . 
                            PHPExcel_Cell::stringFromColumnIndex($i+7) . (14 + count($commesseUser)))
                    ->getFill()
                    ->getStartColor()
                    ->setRGB('ffff23');
            }
        }
    }
    
    //
    $outlineStyleArray = array(
        'borders' => array(
            'outline' => array(
                'style' => PHPExcel_Style_Border::BORDER_MEDIUM,
                'color' => array('RGB' => '000000'),
            ),
        ),
    );

    $objPHPExcel->getActiveSheet()
        ->getStyle('B6:' . getColumnFromIndex($numberOfDays) . (14 + count($commesseUser)))
        ->applyFromArray($outlineStyleArray);
    
    $objPHPExcel->getActiveSheet()
        ->getStyle('B6:E6')
        ->applyFromArray($outlineStyleArray);
    
    $objPHPExcel->getActiveSheet()
        ->getStyle('B14:F14')
        ->applyFromArray($outlineStyleArray);
    
    $objPHPExcel->getActiveSheet()
        ->getStyle('B15:F15')
        ->applyFromArray($outlineStyleArray);
    
    $objPHPExcel->getActiveSheet()
        ->getStyle('B16:F16')
        ->applyFromArray($outlineStyleArray);
    
    $allBordersStyleArray = array(
        'borders' => array(
            'allborders' => array(
                'style' => PHPExcel_Style_Border::BORDER_MEDIUM,
                'color' => array('RGB' => '000000'),
            ),
        ),
    );

    $objPHPExcel->getActiveSheet()
        ->getStyle('F6:' . getColumnFromIndex($numberOfDays) . '6')
        ->applyFromArray($allBordersStyleArray);
    
    $objPHPExcel->getActiveSheet()
        ->getStyle('G14:' . getColumnFromIndex($numberOfDays) . '14')
        ->applyFromArray($allBordersStyleArray);
    
    // Settaggio larghezze colonne
    $lett_arr = array('A'=>5, 'B'=>7, 'C'=>5, 'D'=>7, 'E'=>5, 'F'=>40, 
        'G'=>8, 'H'=>5, 'I'=>5, 'J'=>5, 'K'=>5, 'L'=>5, 'M'=>5, 'N'=>5,
        'O'=>5, 'P'=>5, 'Q'=>5, 'R'=>5, 'S'=>5, 'T'=>5, 'U'=>5, 'V'=>5, 
        'W'=>5, 'X'=>5, 'Y'=>5, 'Z'=>5, 'AA'=>5, 'AB'=>5, 'AC'=>5, 'AD'=>5, 
        'AE'=>5, 'AF'=>5, 'AG'=>5, 'AH'=>5, 'AI'=>5, 'AJ'=>5, 'AK'=>5, 'AL'=>5);
	
    foreach($lett_arr as $key => $value){
        $objPHPExcel->getActiveSheet()
            ->getColumnDimension($key)
            ->setWidth($value);
    }
     
    $permessoOre = 0;
    $permessoArray = filterActivities($idUser, $idMonth, $idYear, 'Permesso', $db);
    $permessoStudiArray = filterActivities($idUser, $idMonth, $idYear, 'Permesso Studi', $db);
    $permessoMergeArray = array_merge($permessoArray, $permessoStudiArray);
    for($i=0; $i<count($permessoMergeArray); $i++) {
        $permessoOre += $permessoMergeArray[$i][1];
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue(getColumnFromIndex($permessoMergeArray[$i][0]) . '7', $permessoMergeArray[$i][1]);
    }
    if($permessoOre > 0) {
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue('G7', $permessoOre);
    }
    
    $ferieOre = 0;
    $ferieArray = filterActivities($idUser, $idMonth, $idYear, 'Ferie', $db);
    for($i=0; $i<count($ferieArray); $i++) {
        $ferieOre += $ferieArray[$i][1];
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue(getColumnFromIndex($ferieArray[$i][0]) . '8', $ferieArray[$i][1]);
    }
    if($ferieOre > 0) {
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue('G8', $ferieOre);
    }
    
    $matCongOre = 0;
    $maternitaArray = filterActivities($idUser, $idMonth, $idYear, 'Maternita', $db);
    $congedoParArray = filterActivities($idUser, $idMonth, $idYear, 'Congedo Parentale', $db);
    $matCongArray = array_merge($maternitaArray, $congedoParArray);
    for($i=0; $i<count($matCongArray); $i++) {
        $matCongOre += $matCongArray[$i][1];
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue(getColumnFromIndex($matCongArray[$i][0]) . '9', $matCongArray[$i][1]);
    }
    if($matCongOre > 0) {
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue('G9', $matCongOre);
    }
    
    $malattiaOre = 0;
    $malattiaArray = filterActivities($idUser, $idMonth, $idYear, 'Malattia', $db);
    for($i=0; $i<count($malattiaArray); $i++) {
        $malattiaOre += $malattiaArray[$i][1];
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue(getColumnFromIndex($malattiaArray[$i][0]) . '10', $malattiaArray[$i][1]);
    }
    if($malattiaOre > 0) {
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue('G10', $malattiaOre);
    }
    
    $oreNonLavorate = $permessoOre + $ferieOre + $matCongOre + $malattiaOre;
    if($oreNonLavorate > 0) {
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue('G12', $oreNonLavorate);
    }
    
    $straordinarioOre = 0;
    $straordinarioArray = filterActivities($idUser, $idMonth, $idYear, 'Straordinario', $db);
    for($i=0; $i<count($straordinarioArray); $i++) {
        $straordinarioOre += $straordinarioArray[$i][1];
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue(getColumnFromIndex($straordinarioArray[$i][0]) . '13', $straordinarioArray[$i][1]);
    }
    if($straordinarioOre > 0) {
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue('G13', $straordinarioOre);
    }
  
    $commesseOre = array_fill(0, count($commesseUser), "");
    $presenzeArray = filterActivities($idUser, $idMonth, $idYear, 'Presente', $db);
    for($i=0; $i<count($presenzeArray); $i++) {
        $currentTimecard = $presenzeArray[$i][2];
        if($currentTimecard != '') {
            $currentTimecard = explode(",", $currentTimecard);
            for($j=0; $j<count($currentTimecard); $j++) {
                $idTimecard = explode("-", $currentTimecard[$j]);
                $currentJobName = getJobNameFromId($idTimecard[0], $db);
                $currentJobIndex = array_search($currentJobName, $commesseNomiUser);
                $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue(getColumnFromIndex($presenzeArray[$i][0]) . 
                            ($currentJobIndex + 15), $idTimecard[1]);
                $commesseOre[$currentJobIndex] += $idTimecard[1];
            }
        }
    }
    
    for($i=0; $i<count($commesseOre); $i++) {
        $objPHPExcel->setActiveSheetIndex(0)
            ->setCellValue('G' . ($i + 15), $commesseOre[$i]);
    }
    
    
    $objPHPExcel->getActiveSheet()
            ->setTitle($title);
    
    $objPHPExcel->setActiveSheetIndex(0);
      
    header('Content-type: application/vnd.ms-excel');
    header('Content-Disposition: attachment; filename="'.$title.'.xls"');
    
    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
    $objWriter->save('php://output');
    
?>